#!/bin/sh
#
# script to update and rotate the AIDE database files and
# create a detached GPG signature to verify the database file
#
# written by Vincent Danen <vdanen-at-annvix.org>
#
# $Id$

# variables
version="1.0"
gpg="/usr/bin/gpg"
aide="/usr/sbin/aide"
fname="aide-`hostname`-`date +%Y%m%d-%H%M%S`"
host="`hostname`"
header="AIDE+gpg - GnuPG authenticity for AIDE databases\nversion: ${version} - \$Id$\n\n"

# get the database directory
dbdir=$(egrep '^@@define DBDIR' /etc/aide.conf | awk '{print $3}')
database_file=$(egrep '^database=' /etc/aide.conf | sed "s|file:@@{DBDIR}|${dbdir}|g" | cut -d '=' -f 2)
databasenew_file=$(egrep '^database_out=' /etc/aide.conf | sed "s|file:@@{DBDIR}|${dbdir}|g" | cut -d '=' -f 2)

export GNUPGHOME=/root/.gnupg

if [ ! -d ${dbdir} ]; then
    printf "The AIDE database directory ${dbdir} does not exist!\n\n"
    exit 1
fi

if [ ! -d ${dbdir}/reports ]; then
    printf "Creating ${dbdir}/reports to store reports\n"
    mkdir ${dbdir}/reports && chmod 0700 ${dbdir}/reports
fi

pushd ${dbdir} >/dev/null

# copy the old database
if [ -f ${database_file} ]; then
    newfile="${fname}.db"
    if [ -f ${database_file}.sig ]; then
        # do an integrity check
	${gpg} --verify ${database_file}.sig
	if [ "$?" == "1" ]; then
	    printf "************************************************************\n"
	    printf "GPG signature FAILED!  Your database has been tampered with!\n"
	    printf "************************************************************\n"
	    exit 1
	fi
    else
        printf "**************************************************************\n"
        printf "No GPG signature file found!  Your system may be compromised\n"
        printf "or incorrectly configured!  Please read aideinit(8) for more\n"
        printf "more information on how to correctly configure AIDE+gpg!\n"
        printf "**************************************************************\n"
        exit 1
    fi
    
    # this function signs the aide.db with gpg
    signfile() {
        unset gpgpass
        printf "\n"
        read -s -e -p "Enter AIDE passphrase for aide@${host}: " gpgpass
        printf "\n"
        echo ${gpgpass} | ${gpg} -u aide@${host} --passphrase-fd stdin --no-tty --batch --detach-sign ${database_file} 
        if [ "$?" == "1" ]; then
            printf "FATAL:  Error occurred when creating the signature file!\n\n"
            exit 1
        fi
        chmod 0600 ${database_file}.sig
    }
    
    cp -f ${database_file} ${newfile} 
    ${aide} --update -B "report_url=file:/var/lib/aide/reports/${fname}.report"
    # rename the outbound file since we prefer operating on the "inbound" file
    if [ "${database_file}" != "${databasenew_file}" ]; then
        mv -f ${databasenew_file} ${database_file}
    fi
    # create the signature file
    [[ -f ${database_file}.sig ]] && rm -f ${database_file}.sig
    signfile
    [[ ! -f ${database_file}.sig ]] && {
        printf "No signature was created; bad passphrase?  Try it again.\n\n"
        signfile
    }
    [[ ! -f ${database_file}.sig ]] && {
        printf "FATAL: Signature was not created twice!  Something is very wrong here.\n\n"
        exit 1
    }
    printf "Database successfully signed.\n\n"
    gzip -9f ${newfile}
else
    printf "The AIDE database does not exist, can't update!\n\n"
    exit 1
fi

popd >/dev/null

exit 0
